<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Extract local variable &apos;newCondition&apos; from expression &apos;lock.newCondition()&apos;&#x0D;&#x0A;- Original project: &apos;test&apos;&#x0D;&#x0A;- Variable name: &apos;newCondition&apos;&#x0D;&#x0A;- Destination method: &apos;test.TestThread.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;lock.newCondition()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;newCondition&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;test{TestThread.java" name="newCondition" replace="true" selection="293 0" stamp="1576725336249" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;countDownLatch&apos; from expression &apos;new CountDownLatch(count)&apos;&#x0D;&#x0A;- Original project: &apos;test&apos;&#x0D;&#x0A;- Variable name: &apos;countDownLatch&apos;&#x0D;&#x0A;- Destination method: &apos;test.TestThread.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new CountDownLatch(count)&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;countDownLatch&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;test{TestThread.java" name="countDownLatch" replace="true" selection="423 0" stamp="1576739005804" varType="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;TestThread.java&apos; to &apos;test.TestThread.java&apos;&#x0D;&#x0A;- Original project: &apos;test&apos;&#x0D;&#x0A;- Destination element: &apos;test.TestThread.java&apos;&#x0D;&#x0A;- Original element: &apos;test.TestThread.java&apos;" description="Copy compilation unit" destination="/src&lt;test{TestThread.java" element1="/src&lt;test{TestThread.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1576739078116" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;printer&apos; from expression &apos;new Printer()&apos;&#x0D;&#x0A;- Original project: &apos;test&apos;&#x0D;&#x0A;- Variable name: &apos;printer&apos;&#x0D;&#x0A;- Destination method: &apos;test.TestCode.main()&apos;&#x0D;&#x0A;- Variable expression: &apos;new Printer()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;printer&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;test{TestCode.java" name="printer" replace="true" selection="100 0" stamp="1576740025597" varType="false" version="1.0"/>
</session>